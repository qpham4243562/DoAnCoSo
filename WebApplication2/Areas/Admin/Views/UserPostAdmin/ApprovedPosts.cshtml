@model IEnumerable<DoAnCoSoAPI.Entities.User_Post>

@{
    ViewData["Title"] = "Index";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



<h1>Danh Sách Bài Đăng Đang Đợi Duyệt</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                ID_Post
            </th>
            <th>
                Title
            </th>
            <th>
                Content
            </th>
            <th>
                Create_At
            </th>
            <th>
                Update_At
            </th>
            <th>
                CreatorId
            </th>
            <th>
                CreatorName
            </th>
            <th>
                Image
                <div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="imageModalLabel">Post Image</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <img id="modalImage" src="" alt="Post Image" style="max-width: 100%; max-height: 400px;">
                            </div>
                        </div>
                    </div>
                </div>
            </th>
            <th>
                File
            </th>
            <th>
                Actions
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.createdAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.updatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatorId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatorName)
                </td>
                <td>



                    @if (item.images != null && item.images.Any())
                    {
                        foreach (var image in item.images)
                        {
                            <img class="post-image" src="data:image/jpeg;base64,@Convert.ToBase64String(image)" alt="Post Image" style="max-width: 100px; max-height: 100px;" />
                        }
                    }

                </td>
                <td>
                    @if (item.Files != null && item.Files.Any())
                    {
                        foreach (var file in item.Files)
                        {
                            <a href="@Url.Action("DownloadFile", "UserPostAdmin", new { id = item.id, fileIndex = item.Files.IndexOf(file) })" target="_blank" class="btn btn-outline-primary btn-sm" title="Download File">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                                    <path d="M.5 9.9v4.6a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V9.9a1 1 0 1 0-2 0v3.6H3V9.9a1 1 0 1 0-2 0z" />
                                    <path d="M7.646 11.854a.5.5 0 0 0 .708 0L10.207 10H8V1.5a.5.5 0 0 0-1 0V10H5.793l1.853 1.854z" />
                                </svg>
                            </a>
                        }
                    }
                </td>
                <td>

                    @Html.ActionLink("Delete", "Delete", new { id = item.id })
                </td>
                <td>
                    <button class="btn btn-success approve-button" data-post-id="@item.id">Approve</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        $("body").on("click", ".post-image", function () {
            var imageUrl = $(this).attr("src");
            $("#modalImage").attr("src", imageUrl);
            $("#imageModal").modal("show");
        });
        $("#searchButton").click(function () {
            // Lấy giá trị ID của bài đăng từ input field
            var postId = $("#postIdInput").val();

            // Gửi yêu cầu AJAX đến controller
            $.ajax({
                type: "GET",
                url: "/Admin/UserPostAdmin/Search?id=" + postId,
                success: function (response) {
                    // Xử lý phản hồi từ controller, hiển thị kết quả
                    // Ví dụ: chuyển hướng đến trang chi tiết bài đăng
                    window.location.href = "/Admin/UserPostAdmin/Search?id=" + postId;
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        });
    });
    $(document).ready(function () {
        // Xử lý sự kiện click trên nút "Approve"
        $("body").on("click", ".approve-button", function () {
            // Lấy ID của bài viết từ thuộc tính data-post-id của nút
            var postId = $(this).data("post-id");

            // Gửi yêu cầu AJAX đến server để cập nhật trạng thái IsApproved
            $.ajax({
                type: "POST", // Sử dụng method POST
                url: "/Admin/UserPostAdmin/ApprovePost",
                data: { id: postId }, // Chỉ cần gửi ID của bài viết
                success: function (response) {
                    alert("Post error");                  
                },
                error: function (error) {
                    alert("Post approved successfully");
                }
            });
        });
    });
</script>
